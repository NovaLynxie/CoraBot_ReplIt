# Edit values and save as config.toml before starting or bot will crash!
# Delete this and lines above once done.

[general]
# Bot general settings.
# Set the bot's prefix for commands and other options here.
prefix = "<PREFIX>"
# Bot Modules. To enable them, change from false to true.
# Developer only setting! Use this only for debugging the config file.
debug = false

[chatbot]
# ChatBot settings. Powered by discord-chatbot.
enableChatBot = true
# Channels ChatBot module can talk in, please use channel IDs here.
chatChannels = [""]

[images]
# Image modules settings.
# Client name is used for identifying the bot using some modules.
# If left blank, the bot will try to use a temporary client name.
# This is not recommended as requests from this bot instance may get blocked in future.
clientName = "<CLIENTNAME>"

[autoLogger] 
# Logging module settings.
enableLogger = "yes"
# This only takes channel IDs! Attempting to use a channel name will fail if the name changes!
# If not defined, will try to fallback to #logs channel if available.
logChannels = []
  [autoLogger.logEvents]
  # Log message edits, join/leave events and more. 
  # Channel must be set otherwise these will be ignored!
  messageUpdates = true
  userJoinLeaves = true
  roleUpdates = true

[autoModerator]
# Auto moderation settings.
enableAutoMod = "yes"
# Whether to use channelsList as whitelist or blacklist.
chListMode = "whitelist"
# Channels to observe in the mode selected.
# This only accepts channel IDs, NOT channel names. Using channel name will cause the moderator to fail.
# To get the channel's ID, enable 'Developer Mode' in User Settings -> Appearance -> Advanced.
channelsList = []
# URL domains to check when removing messages.
urlBlacklist = [ "tenor.com/view/", "media.giphy.com/media/" ]
# URL domains to ignore when removing messages.
urlWhitelist = [ "" ]

  [autoModerator.mediaOptions]
  # These tell which types of media the auto moderator should look for.
  removeGifs = "yes"
  removeVids = "no"
  removeImgs = "no"
  removeURLs = "yes"
  # Note: removeVids and removeImgs are very experimental.
  # Please use them with caution as they are currently WIP.

[dashboard]
# Enable the bot's web dashboard interface here. (WIP)
enableDashboard = false
# This is the port your bot's dashboard will connect to. Default port is '3000'.
port = 3000


[database]
# Database settings.
# Enable database storage. This is used by some functions.
# Disabling this will cause some other stuff to break!
enableDatabase = false
# Set the instance to either use sqlite or replit database methods.
# SQLite only works on systems with access to filesystem, Repl only works on replit.com!
# Valid options: [sqlite, replit, none] 'disable' turns this feature off.
storage = "none"
# Currently 'sqlite' does not work right now! Please deploy to a replit repl for full functionality.
  [database.settings]
  # Local SQLite database settings.

[tokens]
# Tokens for modules or logging in.
# If bot is used for cloud hosting, you will want to use .env files or cloud host systems.
# Use .env or host's env settings to keep tokens secure unless hosting 24/7 on a local server or machine where config is securely stored.
useProcessVars = "yes"
# Any tokens/keys below this line will only work if useProcessVars is set to 'no'.
# Discord Bot Token. (KEEP THIS SAFE!)
botToken = "<DISCORD_TOKEN>"
# API Keys (For Yiffy, YouTube, etc.)
yiffyApiKey = "<YIFFYAPIKEY>"
cheweyApiKey = "<CHEWEYAPIKEY>"
youtubeApiKey = "<YOUTUBEAPIKEY>"